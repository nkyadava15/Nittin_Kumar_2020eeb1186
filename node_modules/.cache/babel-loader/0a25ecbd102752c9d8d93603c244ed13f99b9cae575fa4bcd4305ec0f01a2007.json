{"ast":null,"code":"var _jsxFileName = \"D:\\\\nittin quicksell assignment\\\\src\\\\components\\\\Board\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Board.css';\nimport { fetchData } from '../../Data/Api';\nimport Ticket from '../Ticket/Ticket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Board() {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupingOption, setGroupingOption] = useState(localStorage.getItem('groupingOption'));\n  const [sortingOption, setSortingOption] = useState(localStorage.getItem('sortingOption') || 'priority');\n  useEffect(() => {\n    fetchData().then(data => {\n      setTickets(data.tickets);\n      setUsers(data.users);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // Function to handle changes in the grouping option\n  const handleGroupingChange = e => {\n    const selectedValue = e.target.value;\n    setGroupingOption(selectedValue);\n    localStorage.setItem('groupingOption', selectedValue); // Store in local storage\n  };\n\n  // Function to handle changes in the sorting option\n  const handleSortingChange = e => {\n    const selectedValue = e.target.value;\n    setSortingOption(selectedValue);\n    localStorage.setItem('sortingOption', selectedValue); // Store in local storage\n  };\n\n  // Function to group tickets by priority, user\n  const groupTickets = () => {\n    switch (groupingOption) {\n      case 'user':\n        return groupByUser();\n      case 'priority':\n        return groupByPriority();\n      default:\n        return tickets;\n      // Default to no grouping\n    }\n  };\n\n  // Function to sort tickets by priority or title\n  const sortTickets = groupedTickets => {\n    switch (sortingOption) {\n      case 'priority':\n        return sortByPriority(groupedTickets);\n      case 'title':\n        return sortByTitle(groupedTickets);\n      default:\n        return groupedTickets;\n      // Default to no sorting\n    }\n  };\n\n  // Group tickets by user\n  const groupByUser = () => {\n    const grouped = {};\n    tickets.forEach(ticket => {\n      const user = getUserById(ticket.userId);\n      const userName = user ? user.name : 'Unknown';\n      if (!grouped[userName]) {\n        grouped[userName] = [];\n      }\n      grouped[userName].push(ticket);\n    });\n    return grouped;\n  };\n\n  // Group tickets by priority\n  const groupByPriority = () => {\n    const grouped = {\n      'Urgent': [],\n      'High': [],\n      'Medium': [],\n      'Low': [],\n      'No priority': []\n    };\n    tickets.forEach(ticket => {\n      switch (ticket.priority) {\n        case 4:\n          grouped['Urgent'].push(ticket);\n          break;\n        case 3:\n          grouped['High'].push(ticket);\n          break;\n        case 2:\n          grouped['Medium'].push(ticket);\n          break;\n        case 1:\n          grouped['Low'].push(ticket);\n          break;\n        default:\n          grouped['No priority'].push(ticket);\n          break;\n      }\n    });\n    return grouped;\n  };\n\n  // Sort tickets by priority (descending)\n  const sortByPriority = groupedTickets => {\n    const sortedGroups = {};\n    Object.keys(groupedTickets).sort((a, b) => {\n      const priorityOrder = {\n        'Urgent': 4,\n        'High': 3,\n        'Medium': 2,\n        'Low': 1,\n        'No priority': 0\n      };\n      return priorityOrder[b] - priorityOrder[a];\n    }).forEach(key => {\n      sortedGroups[key] = groupedTickets[key].sort((a, b) => b.priority - a.priority);\n    });\n    return sortedGroups;\n  };\n\n  // Sort tickets by title (ascending)\n  const sortByTitle = groupedTickets => {\n    const sortedGroups = {};\n    Object.keys(groupedTickets).sort().forEach(key => {\n      sortedGroups[key] = groupedTickets[key].sort((a, b) => a.title.localeCompare(b.title));\n    });\n    return sortedGroups;\n  };\n\n  // Function to get user name by user ID\n  const getUserById = userId => {\n    const user = users.find(user => user.id === userId);\n    return user;\n  };\n  const groupedAndSortedTickets = sortTickets(groupTickets());\n  const [displayOptionsVisible, setDisplayOptionsVisible] = useState(false);\n  const toggleDisplayOptions = () => {\n    setDisplayOptionsVisible(!displayOptionsVisible);\n  };\n  const countTasksInGroup = group => {\n    var _groupedAndSortedTick;\n    return ((_groupedAndSortedTick = groupedAndSortedTickets[group]) === null || _groupedAndSortedTick === void 0 ? void 0 : _groupedAndSortedTick.length) || 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDisplayOptions,\n        className: \"display-button\",\n        children: \"Display \\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), displayOptionsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Grouping: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleGroupingChange,\n            value: groupingOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ordering: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleSortingChange,\n            value: sortingOption,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"priority\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"columns\",\n      children: Object.entries(groupedAndSortedTickets).map(([groupLabel, group]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [groupLabel, \" (\", countTasksInGroup(groupLabel), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), group.map(ticket => /*#__PURE__*/_jsxDEV(Ticket, {\n            ticket: ticket,\n            userName: getUserById(ticket.userId) ? getUserById(ticket.userId).name : 'Unknown',\n            userAvailability: getUserById(ticket.userId) ? getUserById(ticket.userId).available : false\n          }, ticket.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 14\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, groupLabel, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(Board, \"Pk5RAC9UGMtkTfQL3Wvas/Mous0=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Ticket","jsxDEV","_jsxDEV","Board","_s","tickets","setTickets","users","setUsers","groupingOption","setGroupingOption","localStorage","getItem","sortingOption","setSortingOption","then","data","catch","error","console","handleGroupingChange","e","selectedValue","target","value","setItem","handleSortingChange","groupTickets","groupByUser","groupByPriority","sortTickets","groupedTickets","sortByPriority","sortByTitle","grouped","forEach","ticket","user","getUserById","userId","userName","name","push","priority","sortedGroups","Object","keys","sort","a","b","priorityOrder","key","title","localeCompare","find","id","groupedAndSortedTickets","displayOptionsVisible","setDisplayOptionsVisible","toggleDisplayOptions","countTasksInGroup","group","_groupedAndSortedTick","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","entries","map","groupLabel","userAvailability","available","_c","$RefreshReg$"],"sources":["D:/nittin quicksell assignment/src/components/Board/Board.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Board.css';\nimport { fetchData } from '../../Data/Api';\nimport Ticket from '../Ticket/Ticket';\n\nfunction Board() {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupingOption, setGroupingOption] = useState(\n    localStorage.getItem('groupingOption')\n  );\n  const [sortingOption, setSortingOption] = useState(\n    localStorage.getItem('sortingOption') || 'priority'\n  );\n\n  useEffect(() => {\n    fetchData()\n      .then((data) => {\n        setTickets(data.tickets);\n        setUsers(data.users);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n   // Function to handle changes in the grouping option\n   const handleGroupingChange = (e) => {\n    const selectedValue = e.target.value;\n    setGroupingOption(selectedValue);\n    localStorage.setItem('groupingOption', selectedValue); // Store in local storage\n  };\n\n  // Function to handle changes in the sorting option\n  const handleSortingChange = (e) => {\n    const selectedValue = e.target.value;\n    setSortingOption(selectedValue);\n    localStorage.setItem('sortingOption', selectedValue); // Store in local storage\n  };\n\n  // Function to group tickets by priority, user\n  const groupTickets = () => {\n    switch (groupingOption) {\n      case 'user':\n        return groupByUser();\n      case 'priority':\n        return groupByPriority();\n      default:\n        return tickets; // Default to no grouping\n    }\n  };\n\n  // Function to sort tickets by priority or title\n  const sortTickets = (groupedTickets) => {\n    switch (sortingOption) {\n      case 'priority':\n        return sortByPriority(groupedTickets);\n      case 'title':\n        return sortByTitle(groupedTickets);\n      default:\n        return groupedTickets; // Default to no sorting\n    }\n  };\n\n  // Group tickets by user\n  const groupByUser = () => {\n    const grouped = {};\n    tickets.forEach((ticket) => {\n      const user=getUserById(ticket.userId);\n      const userName = user? user.name : 'Unknown';\n      if (!grouped[userName]) {\n        grouped[userName] = [];\n      }\n      grouped[userName].push(ticket);\n    });\n    return grouped;\n  };\n\n  // Group tickets by priority\n  const groupByPriority = () => {\n    const grouped = {\n      'Urgent': [],\n      'High': [],\n      'Medium': [],\n      'Low': [],\n      'No priority': []\n    };\n    tickets.forEach((ticket) => {\n      switch (ticket.priority) {\n        case 4:\n          grouped['Urgent'].push(ticket);\n          break;\n        case 3:\n          grouped['High'].push(ticket);\n          break;\n        case 2:\n          grouped['Medium'].push(ticket);\n          break;\n        case 1:\n          grouped['Low'].push(ticket);\n          break;\n        default:\n          grouped['No priority'].push(ticket);\n          break;\n      }\n    });\n    return grouped;\n  };\n\n// Sort tickets by priority (descending)\nconst sortByPriority = (groupedTickets) => {\n  const sortedGroups = {};\n  Object.keys(groupedTickets)\n    .sort((a, b) => {\n      const priorityOrder = {\n        'Urgent': 4,\n        'High': 3,\n        'Medium': 2,\n        'Low': 1,\n        'No priority': 0\n      };\n      return priorityOrder[b] - priorityOrder[a];\n    })\n    .forEach((key) => {\n      sortedGroups[key] = groupedTickets[key].sort((a, b) => b.priority - a.priority);\n    });\n  return sortedGroups;\n};\n\n// Sort tickets by title (ascending)\nconst sortByTitle = (groupedTickets) => {\n  const sortedGroups = {};\n  Object.keys(groupedTickets)\n    .sort()\n    .forEach((key) => {\n      sortedGroups[key] = groupedTickets[key].sort((a, b) => a.title.localeCompare(b.title));\n    });\n  return sortedGroups;\n};\n\n\n  // Function to get user name by user ID\n  const getUserById = (userId) => {\n    const user = users.find((user) => user.id === userId);\n    return user;\n  };\n\n  const groupedAndSortedTickets = sortTickets(groupTickets());\n  const [displayOptionsVisible, setDisplayOptionsVisible] = useState(false);\n\n  const toggleDisplayOptions = () => {\n    setDisplayOptionsVisible(!displayOptionsVisible);\n  };\n  const countTasksInGroup = (group) => {\n    return groupedAndSortedTickets[group]?.length || 0;\n  };\n\n  return (\n    <div className=\"board\">\n      <div className=\"display-options\">\n        <button onClick={toggleDisplayOptions} className=\"display-button\">\n        Display ▼\n        </button>\n        {displayOptionsVisible && (\n          <div className=\"options\">\n            <div>\n              <label>Grouping: </label>\n              <select onChange={handleGroupingChange} value={groupingOption}>\n                <option value=\"user\">User</option>\n                <option value=\"priority\">Priority</option>\n              </select>\n            </div>\n            <div>\n              <label>Ordering: </label>\n              <select onChange={handleSortingChange} value={sortingOption}>\n                <option value=\"priority\">Priority</option>\n                <option value=\"title\">Title</option>\n              </select>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"columns\">\n        {Object.entries(groupedAndSortedTickets).map(([groupLabel, group]) => (\n          <div key={groupLabel} className=\"column\">\n            <div className='card'>\n            <h3>\n              {groupLabel} ({countTasksInGroup(groupLabel)})\n            </h3>\n            {group.map((ticket) => (\n             <Ticket key={ticket.id} ticket={ticket} userName={getUserById(ticket.userId)? getUserById(ticket.userId).name : 'Unknown'} userAvailability={getUserById(ticket.userId)? getUserById(ticket.userId).available : false}/>\n             \n            ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}